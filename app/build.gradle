apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-platform-android'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.android.albumlist"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.android.albumlist.CustomTestRunner"
        // Enabling multidex support.
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    packagingOptions {
        pickFirst 'META-INF/kotlinx-io.kotlin_module'
        pickFirst 'META-INF/atomicfu.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-core.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-io.kotlin_module'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}


ext {
    supportVersion = '29.0.0'
    constraintLayoutVersion = '1.1.3'

    junitVersion = '5.5.2'
    junitRunnerVersion = '1.5.2'
    androidxJunitVersion = '1.1.1'
    assertjCoreVersion = '3.14.0'
    coreTestingVersion = '2.1.0'
    espressoVersion = '3.2.0'
    rulesVersion = '1.2.0'
    kotlinxCoroutinesTestVersion  = '1.3.2'

    gsonVersion = '2.8.5'
    retrofitVersion = '2.0.2'

    lifecycleVersion = '1.1.1'

    picassoVersion = '2.71828'

    roomVersion = '2.2.5'

    rxJavaVersion = '2.2.6'
    rxAndroidVersion = '2.1.1'

    timberVersion = '4.7.1'

    daggerVersion = "2.25.2"
    daggerAndroidVersion = "2.22.1"

    ankoVersion = "0.10.8"

    mockkVersion = "1.9.2"
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':core')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:support-v4:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    /**-------------------testing libs------------------------------------------**/
    //UI Testing , AndroidJUnitRunner and JUnit Rules &Espresso dependencies
    //junit 5
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.platform:junit-platform-runner:$junitRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "org.assertj:assertj-core:$assertjCoreVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation ("androidx.test.espresso:espresso-core:$espressoVersion",{
        exclude group: "com.android.support', module: 'support-annotations"
    })
    implementation "androidx.test:rules:$rulesVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    implementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    implementation "androidx.arch.core:core-testing:$coreTestingVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinxCoroutinesTestVersion"
    /**-------------------------------------------------------------**/


    implementation "com.android.support:cardview-v7:$supportVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    implementation "com.android.support:appcompat-v7:$supportVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    implementation "com.squareup.picasso:picasso:$picassoVersion"

    //room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    //rxjava
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    implementation "com.jakewharton.timber:timber:$timberVersion"

    //Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerAndroidVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerAndroidVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerAndroidVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

    //MultiDex
    implementation 'androidx.multidex:multidex:2.0.1'

    //ANKO
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
    implementation "org.jetbrains.anko:anko-design:$ankoVersion"
    androidExtensions {
        experimental = true
    }

    //Mockk
    implementation "io.mockk:mockk:$mockkVersion"

    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.2'
    implementation 'android.arch.lifecycle:viewmodel:1.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    // alternatively, just ViewModel
    /*implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    implementation "android.arch.lifecycle:viewmodel:$lifecycleVersion"
    // alternatively, just LiveData
    implementation "android.arch.lifecycle:livedata:$lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycleVersion"*/
}

kapt { generateStubs = true }